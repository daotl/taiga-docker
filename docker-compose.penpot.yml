---
############################################################
# NOTE: All the configuration is located in the
# `docker-compose.penpot.env` file.
############################################################

version: "3.5"

networks:
  penpot:
  web:
    external: true

volumes:
  penpot_postgres_data:
    driver_opts:
      type: none
      device: ${PENPOT_VOLUMES_ROOT}/postgres
      o: bind
  penpot_assets_data:
    driver_opts:
      type: none
      device: ${PENPOT_VOLUMES_ROOT}/assets
      o: bind

services:
  penpot-frontend:
    image: "penpotapp/frontend:1.10.0-beta"

    volumes:
      - penpot_assets_data:/opt/data

    env_file:
      - docker-compose.penpot.env

    depends_on:
      - penpot-backend
      - penpot-exporter

    networks:
      - penpot
      - web

    expose:
      - 80

    labels:
      traefik.enable: "true"
      traefik.http.routers.penpot.entryPoints: web
      traefik.http.routers.penpot.tls.certResolver: default
      traefik.http.routers.penpot.rule: Host(`penpot.example.com`)

  penpot-backend:
    image: "penpotapp/backend:1.10.0-beta"
    volumes:
      - penpot_assets_data:/opt/data

    depends_on:
      - penpot-postgres
      - penpot-redis

    env_file:
      - docker-compose.penpot.env

    networks:
      - penpot

  penpot-exporter:
    image: "penpotapp/exporter:1.10.0-beta"
    environment:
      # Don't touch it; this uses internal docker network to
      # communicate with the frontend.
      - PENPOT_PUBLIC_URI=https://penpot-frontend
    networks:
      - penpot

  penpot-postgres:
    image: "postgres:13.5"
    restart: always
    stop_signal: SIGINT

    environment:
      - POSTGRES_INITDB_ARGS=--data-checksums
      - POSTGRES_DB=penpot
      - POSTGRES_USER=penpot
      - POSTGRES_PASSWORD=penpot

    volumes:
      - penpot_postgres_data:/var/lib/postgresql/data

    networks:
      - penpot

  penpot-redis:
    image: redis:6.2
    restart: always
    networks:
      - penpot
